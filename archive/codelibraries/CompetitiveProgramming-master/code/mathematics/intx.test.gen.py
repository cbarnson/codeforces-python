# This file was *autogenerated* from the file intx.test.gen.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_100 = Integer(100); _sage_const_9 = Integer(9); _sage_const_10 = Integer(10); _sage_const_1000 = Integer(1000); _sage_const_20 = Integer(20); _sage_const_18 = Integer(18)
import operator
import sys
import random

def fib(n):
    a,b = _sage_const_0 ,_sage_const_1 
    for i in range(n):
        a,b = b,a+b
    return a

def fac(n):
    res = _sage_const_1 
    for i in range(_sage_const_1 ,n+_sage_const_1 ):
        res *= i
    return res

def cdiv(x, y):
    return abs(x) / abs(y) * cmp(x, _sage_const_0 ) * cmp(y, _sage_const_0 )

def cmod(x, y):
    return abs(x) % abs(y) * (_sage_const_1  if x > _sage_const_0  else -_sage_const_1 )

ts = [
    ('add', _sage_const_100 , operator.add, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ))),
    ('sub', _sage_const_100 , operator.sub, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ))),
    ('mul', _sage_const_100 , operator.mul, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ))),
    ('div', _sage_const_100 , cdiv, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ))),
    ('mod', _sage_const_100 , cmod, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (_sage_const_1 ,_sage_const_10 **_sage_const_9 ))),
    ('mod', _sage_const_100 , cmod, ((-_sage_const_10 **_sage_const_9 ,_sage_const_10 **_sage_const_9 ), (_sage_const_1 ,_sage_const_10 **_sage_const_3 ))),
    ('gcd', _sage_const_100 , gcd, ((_sage_const_0 , _sage_const_10 **_sage_const_9 ), (_sage_const_0 , _sage_const_10 **_sage_const_9 ))),
    ('neg', _sage_const_100 , operator.neg, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ),)),
    ('lt', _sage_const_100 , operator.lt, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ),(-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ))),
    ('add', _sage_const_100 , operator.add, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ), (-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ))),
    ('sub', _sage_const_100 , operator.sub, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ), (-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ))),
    ('mul', _sage_const_100 , operator.mul, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ), (-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ))),
    ('div', _sage_const_100 , cdiv, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ), (-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ))),
    ('mod', _sage_const_100 , cmod, ((-_sage_const_10 **_sage_const_100 ,_sage_const_10 **_sage_const_100 ), (_sage_const_1 ,_sage_const_10 **_sage_const_100 ))),
    # ('mod', 100, cmod, ((-10**100,10**100), (1,10**10))), # too slow :(
    ('mod', _sage_const_100 , cmod, ((-_sage_const_10 **_sage_const_20 ,_sage_const_10 **_sage_const_20 ), (_sage_const_1 ,_sage_const_10 **_sage_const_18 ))),
    ('gcd', _sage_const_100 , gcd, ((_sage_const_0 , _sage_const_10 **_sage_const_100 ), (_sage_const_0 , _sage_const_10 **_sage_const_100 ))),
    ('fib', _sage_const_100 , fib, ((_sage_const_0 ,_sage_const_1000 ),)),
    ('fac', _sage_const_100 , fac, ((_sage_const_0 ,_sage_const_1000 ),)),
]

for name, cnt, f, args in ts:
    for i in range(cnt):
        sargs = [ random.randint(a,b) for a,b in args ]
        sys.stdout.write('%s %s %s\n' % (name, ' '.join(map(str, sargs)), str(f(*sargs))))

